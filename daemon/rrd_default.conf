
rrd_graph = { 
		UNMPDeviceType.odu100:{
			"crc_phy" : 
                      {
                        "name":"CRC/PHY Error",
                        "desc":"Statistics of Crc/Phy Errors",
                        "is_localhost":0,
                        "is_snmp":True,
                        "oid_table":"1.3.6.1.4.1.26149.2.2.13.7.3.1",
                        "row_index":[1],
                        "row_count":False,
                        "column_index":[7,8],
                        "ds_name":["CRC","PHY"],
                        "ds_type":DSType.counter,
                        "ds_heartbeat":'120',          # in sec
                        "rrd_size":86400,		# in sec
                        "ds_lower_limit":'0',
                        "ds_upper_limit":'U',
                        "unit":"error",
                        "rra_cf":[RRACF.average,RRACF.average,RRACF.average],
                        "rra_x_file_factor":['0.5','0.5','0.5'],
                        "rra_dataset":['1','5','10'],           # in sec
                        "rra_samples":['1440','288','144'],           # number of rows
                        "rrd_file_name":"crc_phy.rrd",
                        "timestamp":"N",
                        "show_ds":"-+U",		# +U -> Only Unknown value, -U -> Other then Unknown value, -+U -> Unknown and known both  
                        "dyn_ds_name":False,		# if ds name fetch dynamic then make it
                        "get_dyn_name":None,		# function name which give you the dynamic names of the ds
                        "unreachable_value":'-1',
                        "rrd_step":60
                      },
               		"sync_loss" :
                      {
                        "name":"Sync Loss",
                        "desc":"Sync Loss Counter",
                        "is_localhost":0,
                        "is_snmp":True,
                        "oid_table":"1.3.6.1.4.1.26149.2.2.11.2.1",
                        "row_index":[1],
                        "row_count":False,
                        "column_index":[1],
                        "ds_name":["sync"],
                        "ds_type":DSType.counter,
                        "ds_heartbeat":'120',          # in sec
                        "rrd_size":86400,		# in sec
                        "ds_lower_limit":'0',
                        "ds_upper_limit":'U',
                        "unit":"count",
                        "rra_cf":[RRACF.average,RRACF.average,RRACF.average],
                        "rra_x_file_factor":['0.5','0.5','0.5'],
                        "rra_dataset":['1','5','10'],           # in sec
                        "rra_samples":['1440','288','144'],           # number of rows
                        "rrd_file_name":"sync_loss.rrd",
                        "timestamp":"N",
                        "show_ds":"-+U",		# +U -> Only Unknown value, -U -> Other then Unknown value, -+U -> Unknown and known both  
                        "dyn_ds_name":False,		# if ds name fetch dynamic then make it
                        "get_dyn_name":None,		# function name which give you the dynamic names of the ds
                        "unreachable_value":'-1',
                        "rrd_step":60
                      },
               		"rssi" :
                      {
                        "name":"RSL",
                        "desc":"Statistics of RSL ",
                        "is_localhost":0,
                        "is_snmp":True,
                        "oid_table":"1.3.6.1.4.1.26149.2.2.13.9.2.1",
                        "row_index":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16],		# Note: row start from 1 not from 0
                        "row_count":False,
                        "column_index":[4],
                        "ds_name":["link1","link2","link3","link4","link5","link6","link7","link8","link9","link10","link11","link12","link13","link14","link15","link16"],
                        "ds_type":DSType.gauge,
                        "ds_heartbeat":'120',          # in sec
                        "rrd_size":86400,		# in sec
                        "ds_lower_limit":'-95',
                        "ds_upper_limit":'0',
                        "unit":"dBm",
                        "rra_cf":[RRACF.average,RRACF.average,RRACF.average],
                        "rra_x_file_factor":['0.5','0.5','0.5'],
                        "rra_dataset":['1','5','10'],           # in sec
                        "rra_samples":['1440','288','144'],           # number of rows
                        "rrd_file_name":"rssi.rrd",
                        "timestamp":"N",
                        "show_ds":"-+U",				# +U -> Only Unknown value, -U -> Other then Unknown value, -+U -> Unknown and known both  
                        "dyn_ds_name":False,			# if ds name fetch dynamic then make it
                        "get_dyn_name":None,		# function name which give you the dynamic names of the ds
                        "unreachable_value":'-1',
                        "rrd_step":60
                      },
                 	"interface":
                      {
                        "name":"Interface (eth0)",
                        "desc":"Statistics of interface eth0",
                        "is_localhost":0,
                        "is_snmp":True,
                        "oid_table":"1.3.6.1.4.1.26149.2.2.12.3.1",
                        "row_index":[1],					# Note: row start from 1 not from 0
                        "row_count":False,
                        "column_index":[3,4],
                        "ds_name":["Rx","Tx"],
                        "ds_type":DSType.counter,
                        "ds_heartbeat":'120',          # in sec
                        "ds_lower_limit":'0',
                        "ds_upper_limit":'U',
                        "unit":"byte/sec",
                        "rrd_size":86400,		# in sec
                        "rra_cf":[RRACF.average,RRACF.average,RRACF.average],
                        "rra_x_file_factor":['0.5','0.5','0.5'],
                        "rra_dataset":['1','5','10'],           # in sec
                        "rra_samples":['1440','288','144'],           # number of rows
                        "rrd_file_name":"interface_eth0.rrd",
                        "timestamp":"N",
                        "show_ds":"-+U",				# +U -> Only Unknown value, -U -> Other then Unknown value, -+U -> Unknown and known both  
                        "dyn_ds_name":False,			# if ds name fetch dynamic then make it
                        "get_dyn_name":None,		# function name which give you the dynamic names of the ds
                        "unreachable_value":'-1',
                        "rrd_step":60
                      }
            },
            UNMPDeviceType.odu16:{},
            UNMPDeviceType.idu4:{},
            UNMPDeviceType.ap25:{
            	"interface":
                      {
                        "name":"Interface (eth0)",
                        "desc":"Statistics of interface eth0",
                        "is_localhost":0,
                        "is_snmp":True,
                        "oid_table":"1.3.6.1.4.1.26149.10.4.1.1.1",
                        "row_index":[1],					# Note: row start from 1 not from 0
                        "row_count":False,
                        "column_index":[3,4],
                        "ds_name":["Rx","Tx"],
                        "ds_type":DSType.counter,
                        "ds_heartbeat":'120',          # in sec
                        "ds_lower_limit":'0',
                        "ds_upper_limit":'U',
                        "unit":"byte/sec",
                        "rrd_size":86400,		# in sec
                        "rra_cf":[RRACF.average,RRACF.average,RRACF.average],
                        "rra_x_file_factor":['0.5','0.5','0.5'],
                        "rra_dataset":['1','5','10'],           # in sec
                        "rra_samples":['1440','288','144'],           # number of rows
                        "rrd_file_name":"interface_eth0.rrd",
                        "timestamp":"N",
                        "show_ds":"-+U",				# +U -> Only Unknown value, -U -> Other then Unknown value, -+U -> Unknown and known both  
                        "dyn_ds_name":False,			# if ds name fetch dynamic then make it
                        "get_dyn_name":None,		# function name which give you the dynamic names of the ds
                        "unreachable_value":'-1',
                        "rrd_step":60
                      },
                      "client_graph":
                      {
                        "name":"Client Statistics",
                        "desc":"Statistics of Clients Counting",
                        "is_localhost":0,
                        "is_snmp":True,
                        "oid_table":"1.3.6.1.4.1.26149.10.4.3.1.1",
                        "row_index":[1],					# Note: row start from 1 not from 0
                        "row_count":True,
                        "column_index":[1],
                        "ds_name":["Total Client"],
                        "ds_type":DSType.gauge,
                        "ds_heartbeat":'120',          # in sec
                        "ds_lower_limit":'0',
                        "ds_upper_limit":'U',
                        "unit":"Total Client",
                        "rrd_size":86400,		# in sec
                        "rra_cf":[RRACF.average,RRACF.average,RRACF.average],
                        "rra_x_file_factor":['0.5','0.5','0.5'],
                        "rra_dataset":['1','5','10'],           # in sec
                        "rra_samples":['1440','288','144'],           # number of rows
                        "rrd_file_name":"client_graph.rrd",
                        "timestamp":"N",
                        "show_ds":"-+U",				# +U -> Only Unknown value, -U -> Other then Unknown value, -+U -> Unknown and known both  
                        "dyn_ds_name":False,			# if ds name fetch dynamic then make it
                        "get_dyn_name":None,		# function name which give you the dynamic names of the ds
                        "unreachable_value":'-1',
                        "rrd_step":60
                      }}
}

rrd_param ={"rrd_step":"60",		# in sec
             "rrd_start":"N",            # N for Now Timestamp
             "rrd_file_path":"/omd/daemon/rrd/" }
