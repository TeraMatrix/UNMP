###############################################################################
# COMMANDS.CFG - SAMPLE COMMAND DEFINITIONS FOR NAGIOS 3.2.1
#
# Last Modified: 16 -Jan 2012
#
# NOTES: This config file provides you with some example command definitions
#        that you can reference in host, service, and contact definitions.
#       
#        You don't need to keep commands in a separate file from your other
#        object definitions.  This has been done just to make things easier to
#        understand.
#
###############################################################################

################################################################################
#
# SAMPLE HOST CHECK COMMANDS
#
################################################################################


# This command checks to see if a host is "alive" by pinging it
# The check must result in a 100% packet loss or 5 second (5000ms) round trip 
# average time to produce a critical error.
# Note: Five ICMP echo packets are sent (determined by the '-p 5' argument)

# 'check-host-alive' command definition
define command{
    command_name    check-host-alive
    command_line    $USER1$/check_icmp -H $HOSTADDRESS$ -w 3000.0,80% -c 5000.0,100% -p 5
}

################################################################################
#
# SAMPLE SERVICE CHECK COMMANDS
#
# These are some example service check commands.  They may or may not work on
# your system, as they must be modified for your plugins.  See the HTML 
# documentation on the plugins for examples of how to configure command definitions.
#
# NOTE:  The following 'check_local_...' functions are designed to monitor
#        various metrics on the host that Nagios is running on (i.e. this one).
################################################################################

# 'check_local_disk' command definition
define command{
    command_name    check_local_disk
    command_line    $USER1$/check_disk -w $ARG1$ -c $ARG2$ -p $ARG3$
}


# 'check_local_load' command definition
define command{
    command_name    check_local_load
    command_line    $USER1$/check_load -w $ARG1$ -c $ARG2$
}


# 'check_local_procs' command definition
define command{
    command_name    check_local_procs
    command_line    $USER1$/check_procs -w $ARG1$ -c $ARG2$
}


# 'check_local_users' command definition
define command{
    command_name    check_local_users
    command_line    $USER1$/check_users -w $ARG1$ -c $ARG2$
}


# 'check_local_swap' command definition
define command{
    command_name	check_local_swap
    command_line	$USER1$/check_swap -w $ARG1$ -c $ARG2$
}

################################################################################
# NOTE:  The following 'check_...' commands are used to monitor services on
#        both local and remote hosts.
################################################################################

# 'check_ftp' command definition
define command{
    command_name    check_ftp
    command_line    $USER1$/check_ftp -H $HOSTADDRESS$ $ARG1$
}

# 'check_hpjd' command definition
define command{
    command_name    check_hpjd
    command_line    $USER1$/check_hpjd -H $HOSTADDRESS$ $ARG1$
}

# 'check_snmp' command definition
define command{
    command_name    check_snmp
    command_line    $USER1$/check_snmp -H $HOSTADDRESS$ $ARG1$
}

# 'check_http' command definition
define command{
    command_name    check_http
    command_line    $USER1$/check_http -I $HOSTADDRESS$ $ARG1$
}

# 'check_ssh' command definition
define command{
	command_name	check_ssh
	command_line	$USER1$/check_ssh $ARG1$ $HOSTADDRESS$
}

# 'check_dhcp' command definition
define command{
    command_name	check_dhcp
    command_line	$USER1$/check_dhcp $ARG1$
}

# 'check_ping' command definition
define command{
    command_name    check_ping
    command_line    $USER1$/check_ping -H $HOSTADDRESS$ -w $ARG1$ -c $ARG2$ -p 5
}

# 'check_pop' command definition
define command{
    command_name    check_pop
    command_line    $USER1$/check_pop -H $HOSTADDRESS$ $ARG1$
}

# 'check_imap' command definition
define command{
    command_name    check_imap
    command_line    $USER1$/check_imap -H $HOSTADDRESS$ $ARG1$
}

# 'check_smtp' command definition
define command{
    command_name    check_smtp
    command_line    $USER1$/check_smtp -H $HOSTADDRESS$ $ARG1$
}

# 'check_tcp' command definition
define command{
	command_name	check_tcp
	command_line	$USER1$/check_tcp -H $HOSTADDRESS$ -p $ARG1$ $ARG2$
}

# 'check_udp' command definition
define command{
	command_name	check_udp
	command_line	$USER1$/check_udp -H $HOSTADDRESS$ -p $ARG1$ $ARG2$
}

# 'check_nt' command definition
define command{
	command_name	check_nt
	command_line	$USER1$/check_nt -H $HOSTADDRESS$ -p 12489 -v $ARG1$ $ARG2$
}

# 'check_local_mrtgtraf' command definition
define command{
    command_name    check_local_mrtgtraf
    command_line    $USER1$/check_mrtgtraf -F $ARG1$ -a $ARG2$ -w $ARG3$ -c $ARG4$ -e $ARG5$
}

# 'check_config_patameter' command definition
define command {
	command_name	check_config_patameter
	command_line	$USER1$/download_config.sh $ARG1$ $ARG2$ $ARG3$ $ARG4$
}

# 'check_https' command definition
define command {
	command_name	check_https
	command_line	$USER1$/check_https $HOSTADDRESS$
}

# 'check_telnet' command definition
define command{
	command_name check_telnet
	command_line $USER1$/check_tcp -H $HOSTADDRESS$ -p 23
}

# 'check_mysql' command definition
define command{
	command_name check_mysql
	command_line $USER1$/check_mysql -H $HOSTADDRESS$ -p 3306

}

# 'check_nrpe' command definition
define command{
	command_name check_nrpe
	command_line $USER1$/check_nrpe
}

# 'ap_bandwidth' command definition
define command{
	command_name check_ap_bandwidth
	command_line $USER1$/ap_bandwidth.py -i $HOSTADDRESS$ -s $ARG1$
}

# 'ap_no_of_user' command definition
define command{
	command_name check_ap_no_of_user
	command_line $USER1$/ap_no_of_user.py -i $HOSTADDRESS$ -s $ARG1$
}

define command{ 
	command_name	notify-by-email 
	command_line	$USER1$/send_mail.pl -n "$NOTIFICATIONTYPE$" -h "$HOSTNAME$"-s "$HOSTSTATE$" -a "$HOSTADDRESS$" -i "$HOSTOUTPUT$" -d "$LONGDATETIME$" -e "$CONTACTEMAIL$" 
} 
define command{ 
	command_name	host-notify-by-email 
	command_line /usr/local/bin/sendEmail -o tls=yes -s $USER7$ -xu $USER5$ -xp $USER6$ -t $CONTACTEMAIL$ -f $USER5$ -l /var/log/sendEmail -u "** $NOTIFICATIONTYPE$ Host Alert: $HOSTNAME$ is $HOSTSTATE$ **" -m "***** Nagios *****\n\nNotification Type: $NOTIFICATIONTYPE$\nHost: $HOSTNAME$\nState: $HOSTSTATE$\nAddress: $HOSTADDRESS$\nInfo: $HOSTOUTPUT$\n\nDate/Time: $LONGDATETIME$\n"
} 
define command{ 
	command_name	service-notify-by-email 
	command_line /usr/local/bin/sendEmail -o tls=yes -s $USER7$ -xu $USER5$ -xp $USER6$ -t $CONTACTEMAIL$ -f $USER5$ -l /var/log/sendEmail -u "** $NOTIFICATIONTYPE$ Service Alert: $HOSTALIAS$/$SERVICEDESC$ is $SERVICESTATE$ **" -m "***** Nagios *****\n\nNotification Type: $NOTIFICATIONTYPE$\n\nService: $SERVICEDESC$\nHost: $HOSTALIAS$\nAddress: $HOSTADDRESS$\nState: $SERVICESTATE$\n\nDate/Time: $LONGDATETIME$\n\nAdditional Info:\n\n$SERVICEOUTPUT$"
}
# ODU MONITOR PLUGIN  
define command{
	command_name check_walk1
	command_line $USER1$/walk1.py -i $HOSTADDRESS$ -p $ARG1$ -d $ARG2$
}
# End of Defination 

# ODU MONITOR PLUGIN  
define command{
	command_name check_walk2
	command_line $USER1$/walk2.py -i $HOSTADDRESS$ -o $ARG1$ -t $ARG2$ -p $ARG3$ -m $ARG4$
}
# End of Defination 

# TRAP ALARM DEAMON CHECK Nagios Plugin
define command{
	command_name check_alarm
	command_line $USER1$/check_alarm.py
}
# End of Defination 


# DISCOVERY SERVER CHECK Nagios Plugin
define command{
	command_name check_ds
	command_line $USER1$/check_ds.py
}
# End of Defination 
# SNMP UPTIME Nagios Plugin
define command{
        command_name snmp_uptime
        command_line $USER1$/snmp_uptime.py -i $HOSTADDRESS$ -p $ARG1$
}
# End of Defination
